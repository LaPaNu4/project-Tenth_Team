{"mappings":"AACA,MAAMA,EAAUC,SAASC,cAAc,mBAEjCC,GADaF,SAASC,cAAc,gBACzBD,SAASC,cAAc,UAClCE,EAAeH,SAASC,cAAc,kBAEtCG,EAAWJ,SAASC,cAAc,qBAElCI,GADkBL,SAASM,iBAAiB,0BAC1BN,SAASC,cAAc,2BAK/CC,EAASK,UAAUC,IAAI,QACvBL,EAAaI,UAAUC,IAAI,QAC3BJ,EAASG,UAAUC,IAAI,QAEvB,MAAMC,EAAiB,GAwCnB,MA4BEC,EAAeC,GACVA,EAAWC,KAAIC,IAClB,MAAMC,YAAEA,EAAWC,eAAEA,EAAcC,aAAEA,EAAYC,WAAEA,EAAUC,GAAEA,GAAOL,EAIhEM,EAAc,kCAAkCL,IAMtD,YAJmBM,IAAhBN,GAA6C,KAAhBA,IAC5BK,EAAc,qCAGX,4FAGuCD,kDACTC,6IAKKJ,iHAlB5BF,EAAKQ,OAAOT,KAAIS,GAAUA,EAAOC,OAAMC,MAAM,EAAG,GAAGC,KAAK,kEAEzDX,EAAKG,aAAaO,MAAM,EAAG,6NA0BlC,IACPC,KAAK,IAGZC,OAAOC,OArGP,WACI,MAAMC,EAAWC,KAAKC,MAAMC,aAAaC,QAR7B,mBAUZ,IAAIJ,GAAgC,IAApBA,EAASK,OAGrB,OAFA7B,EAAaI,UAAU0B,OAAO,aAC9B9B,EAAaI,UAAUC,IAAI,QAI/B,MAEM0B,EAAcP,EAASf,KAAIuB,GACtBC,MAAM,sCAAcD,EAAMjB,+CAChCmB,MAAKC,GAAQA,EAAKC,WAGvBC,QAAQC,IAAIP,GACPG,MAAKK,IACFjC,EAAekC,QAAQD,GAEvB3C,EAAQ6C,UAAY,GAEpB,MAAMC,EAAanC,EAAYgC,GAE/B3C,EAAQ+C,mBAAmB,YAAaD,GACxC1C,EAAaI,UAAUC,IAAI,QAC3BL,EAAaI,UAAU0B,OAAO,QAC9B/B,EAASK,UAAUC,IAAI,QACvBN,EAASK,UAAU0B,OAAO,QAC1B7B,EAASG,UAAUC,IAAI,QACvBJ,EAASG,UAAU0B,OAAO,OAAO,IAEpCc,OAAMC,IACHC,QAAQC,IAAIF,EAAM,G,EAsE9B3C,EAAgB8C,iBAAiB,SAjEAC,IACzB,MACMC,EADSD,EAAEE,OACYC,QAAQC,OACrCP,QAAQC,IAAIG,GACZJ,QAAQC,IAAIzC,GAGZ,MAAMgD,EAAehD,EAAe+C,QAAOrB,GACnBA,EAAMd,OAAOT,KAAI8C,GAASA,EAAMpC,KAAKqC,gBACtCC,SAASP,EAAcM,iBAK9C,GAHAV,QAAQC,IAAIO,GAGRA,EAAazB,OAAS,EAAG,CAC7BjC,EAAQ6C,UAAY,GACpB,MAAMiB,EAAenD,EAAY+C,GACjC1D,EAAQ+C,mBAAmB,YAAae,GACxC3D,EAASK,UAAUC,IAAI,QACvBN,EAASK,UAAU0B,OAAO,O,MAE1BlC,EAAQ6C,UAAY,gDAAgDS,mCACpEnD,EAASK,UAAUC,IAAI,QACvBN,EAASK,UAAU0B,OAAO,O","sources":["src/js/library-II.js"],"sourcesContent":["\nconst gallery = document.querySelector('.movies-gallery');\nconst searchMore = document.querySelector('.search-more');\nconst loadMore = document.querySelector('.load');\nconst emptyGallery = document.querySelector('.empty-gallery');\n\nconst dropDown = document.querySelector('.dropdown-library');\nconst dropLibraryItem = document.querySelectorAll('.dropdown-item-library');\nconst dropMenuLibrary = document.querySelector('.dropdown-menu-library');\n\n\n\nconst STORAGE = 'favoriteMovies';\nloadMore.classList.add('hide');\nemptyGallery.classList.add('show');\ndropDown.classList.add('hide');\n\nconst renderedMovies = [];\n\nfunction fetchFromLibrary() {\n    const movieIds = JSON.parse(localStorage.getItem(STORAGE));\n    \n    if(!movieIds || movieIds.length === 0) {\n        emptyGallery.classList.remove('hide');\n        emptyGallery.classList.add('show');\n        return;\n    }\n\n    const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n    const API_KEY = '14b16a10583a3d9315723a356100e4ad';\n    const fetchMovies = movieIds.map(movie => {\n        return fetch(`${BASE_URL}${movie.id}?api_key=${API_KEY}`)\n        .then(data => data.json());\n    });\n\n    Promise.all(fetchMovies)\n        .then(movieData => {\n            renderedMovies.push(...movieData);\n\n            gallery.innerHTML = '';\n\n            const moviesById = movieMarkUp(movieData);\n\n            gallery.insertAdjacentHTML('beforeend', moviesById);\n            emptyGallery.classList.add('hide');\n            emptyGallery.classList.remove('show');\n            loadMore.classList.add('show');\n            loadMore.classList.remove('hide');\n            dropDown.classList.add('show');\n            dropDown.classList.remove('hide');\n        })                    \n        .catch(error => {\n            console.log(error);\n        });\n    }    \n\n\n    const filterMoviesByGenre = (e) => {\n        const target = e.target;\n        const genreSelected = target.dataset.filter; \n        console.log(genreSelected);\n        console.log(renderedMovies);\n   \n\n        const chosenMovies = renderedMovies.filter(movie => {\n            const movieGenres = movie.genres.map(genre => genre.name.toLowerCase());\n            return movieGenres.includes(genreSelected.toLowerCase());\n        });\n        console.log(chosenMovies);\n\n          \n        if (chosenMovies.length > 0) {\n        gallery.innerHTML = ''; \n        const galleryItems = movieMarkUp(chosenMovies);\n        gallery.insertAdjacentHTML('beforeend', galleryItems);\n        loadMore.classList.add('show');\n        loadMore.classList.remove('hide');\n        } else {\n        gallery.innerHTML = `<h1 class=\"np_chosen\">Sorry but there are no ${genreSelected} movies in your Library...</h1>`;\n        loadMore.classList.add('hide');\n        loadMore.classList.remove('show');\n        }\n  }\n\n\nconst movieMarkUp = (dataComing) => {\n    return dataComing.map(item => {\n        const { poster_path, original_title, release_date, popularity, id } = item;\n        const genre = item.genres.map(genres => genres.name).slice(0, 2).join(', ');\n\n        const year = item.release_date.slice(0, 4);\n        const moviePoster = `https://image.tmdb.org/t/p/w500${poster_path}`;\n        \n        if(poster_path === undefined || poster_path === \"\") {\n            moviePoster = `./images/hero-img/coming-soon.jpg`;\n        }\n\n        return `\n\n        <li class=\"movie-item\">\n            <div class=\"movie\" data-catalog-item id=${id}>\n                <img class=\"movie-img\" src=${moviePoster}>\n\n\n                <div class=\"movie-info\">\n                    <div class=\"info\">\n                        <h2 class=\"movie-title\">${original_title}</h2>\n                        <div class=\"genre_year\">\n                            <h2 class=\"movie-genre\">${genre}</h2>\n                            <h2 class=\"movie-year\">${year}</h2></div>\n                        </div>\n                    <div>\n                        <span class=\"movie-rating\"></span>\n                    </div>\n                </div>\n            </div>\n        </li>`;\n    }).join('');\n}\n\nwindow.onload = fetchFromLibrary;\n\ndropMenuLibrary.addEventListener('click', filterMoviesByGenre);\n\n\n"],"names":["$c7fffb47ad68bea0$var$gallery","document","querySelector","$c7fffb47ad68bea0$var$loadMore","$c7fffb47ad68bea0$var$emptyGallery","$c7fffb47ad68bea0$var$dropDown","$c7fffb47ad68bea0$var$dropMenuLibrary","querySelectorAll","classList","add","$c7fffb47ad68bea0$var$renderedMovies","$c7fffb47ad68bea0$var$movieMarkUp","dataComing","map","item","poster_path","original_title","release_date","popularity","id","moviePoster","undefined","genres","name","slice","join","window","onload","movieIds","JSON","parse","localStorage","getItem","length","remove","fetchMovies","movie","fetch","then","data","json","Promise","all","movieData","push","innerHTML","moviesById","insertAdjacentHTML","catch","error","console","log","addEventListener","e","genreSelected","target","dataset","filter","chosenMovies","genre","toLowerCase","includes","galleryItems"],"version":3,"file":"library.a2f130c2.js.map"}