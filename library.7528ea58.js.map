{"mappings":"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","sources":["src/js/library-II.js"],"sourcesContent":["const gallery = document.querySelector('.movies-gallery');\nconst searchMore = document.querySelector('.search-more');\nconst loadMore = document.querySelector('.load');\nconst emptyGallery = document.querySelector('.empty-gallery');\nconst dropDown = document.querySelector('.dropdown-library');\nconst dropLibraryItem = document.querySelectorAll('.dropdown-item-library');\nconst dropMenuLibrary = document.querySelector('.dropdown-menu-library');\nconst modalEl = document.querySelector('.modal-backdrop');\nconst closeBtnEl = document.querySelector('.film-card-close-btn');\nmodalEl.addEventListener('click', fetchFromLibrary);\n// closeBtnEl.addEventListener('click', fetchFromLibrary);\n\nconst renderedMovies = [];\n\nconst STORAGE = 'favoriteMovies';\nloadMore.classList.add('hide');\nemptyGallery.classList.add('show');\ndropDown.classList.add('hide');\n\n\nfunction fetchFromLibrary() {\n    const movieIds = JSON.parse(localStorage.getItem(STORAGE));\n    \n    if (!movieIds || movieIds.length === 0) {\n        console.log(\"відкрився if\")\n           gallery.innerHTML = '';\n        emptyGallery.classList.remove('hide');\n        emptyGallery.classList.add('show');\n        loadMore.classList.remove('show');\n        loadMore.classList.add('hide');\n        dropDown.classList.remove('show');\n        dropDown.classList.add('hide');\n        // emptyGallery.classList.remove('hide');\n        // emptyGallery.classList.add('show');\n        return;\n    }\n\n    const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n    const API_KEY = '14b16a10583a3d9315723a356100e4ad';\n    const fetchMovies = movieIds.map(movie => {\n        return fetch(`${BASE_URL}${movie.id}?api_key=${API_KEY}`)\n        .then(data => data.json());\n    });\n\n    Promise.all(fetchMovies)\n        .then(movieData => {\n            renderedMovies.push(...movieData);\n\n            gallery.innerHTML = '';\n\n            const moviesById = movieMarkUp(movieData);\n\n            gallery.insertAdjacentHTML('beforeend', moviesById);\n            emptyGallery.classList.add('hide');\n            emptyGallery.classList.remove('show');\n            loadMore.classList.add('show');\n            loadMore.classList.remove('hide');\n            dropDown.classList.add('show');\n            dropDown.classList.remove('hide');\n        })                    \n        .catch(error => {\n            console.log(error);\n        });\n    }    \n\n\n    const filterMoviesByGenre = (e) => {\n        const target = e.target;\n        const genreSelected = target.dataset.filter; \n\n        const chosenMovies = renderedMovies.filter(movie => {\n            const movieGenres = movie.genres.map(genre => genre.name.toLowerCase());\n            return movieGenres.includes(genreSelected.toLowerCase());\n        });\n        console.log(chosenMovies);\n\n        if(genreSelected.toLowerCase() === 'all') {\n            gallery.innerHTML = ''; \n            const galleryItems = movieMarkUp(renderedMovies);\n            gallery.insertAdjacentHTML('beforeend', galleryItems);\n            loadMore.classList.add('show');\n            loadMore.classList.remove('hide');\n        } else if (chosenMovies.length > 0) {\n            gallery.innerHTML = ''; \n            const galleryItems = movieMarkUp(chosenMovies);\n            gallery.insertAdjacentHTML('beforeend', galleryItems);\n            loadMore.classList.add('show');\n            loadMore.classList.remove('hide');\n        } else {\n            gallery.innerHTML = `<h1 class=\"np_chosen\">Sorry but there are no ${genreSelected} movies in your Library...</h1>`;\n            loadMore.classList.add('hide');\n            loadMore.classList.remove('show');\n        }\n  }\n\n\nconst movieMarkUp = (dataComing) => {\n    return dataComing.map(item => {\n        const {\n          poster_path,\n          original_title,\n          release_date,\n          popularity,\n          id,\n          vote_average,\n        } = item;\n        const genre = item.genres.map(genres => genres.name).slice(0, 2).join(', ');\n const poster = item.poster_path;\n        const year = item.release_date.slice(0, 4);\n        let moviePoster = `https://image.tmdb.org/t/p/w500${poster_path}`;\n        \n        if(poster_path === null ) {\n            moviePoster = `https://marketplace.canva.com/EAE9OZ4Eh9o/1/0/1131w/canva-black-minimalist-coming-soon-poster-rmN33IHdOEM.jpg`;\n        }\n        let rating = vote_average\nconst width = Math.round(rating) * 10;\n        return `\n\n        <li class=\"movie-item\">\n            <div class=\"movie\" data-catalog-item id=${id}>\n                <img class=\"movie-img\" src=${moviePoster}>\n\n\n                <div class=\"movie-info\">\n                    <div class=\"info\">\n                        <h2 class=\"movie-title\">${original_title}</h2>\n                        <div class=\"genre_year\">\n                            <h2 class=\"movie-genre\">${genre}</h2>\n                            <h2 class=\"movie-year\">${year}</h2></div>\n                        </div>\n                    <div>\n                        <span class=\"movie-rating\"></span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form_item form_item_library\">\n            <div class=\"form_lebel\"> </div>\n            <div data-ajax=\"true\" class=\"rating rating_weekly  rating_set rating-hero\">\n              <div class=\"rating_body\">\n                <div class=\"rating_active ${id}\" style=\"width: ${width}%;\"></div>\n                <div class=\"rating_items\">\n                  <input type=\"radio\" class=\"rating_item\" value=\"1\" name=\"rating\">\n                  <input type=\"radio\" class=\"rating_item\" value=\"2\" name=\"rating\">\n                  <input type=\"radio\" class=\"rating_item\" value=\"3\" name=\"rating\">\n                  <input type=\"radio\" class=\"rating_item\" value=\"4\" name=\"rating\">\n                  <input type=\"radio\" class=\"rating_item\" value=\"5\" name=\"rating\">\n                </div>\n              </div>\n            </div>\n          </div>\n        </li>`;\n    }).join('');\n}\n\nwindow.onload = fetchFromLibrary;\n\ndropMenuLibrary.addEventListener('click', filterMoviesByGenre);\n\n"],"names":["$8nrFW","parcelRequire","$463ad9cb83219124$var$gallery","document","querySelector","$463ad9cb83219124$var$loadMore","$463ad9cb83219124$var$emptyGallery","$463ad9cb83219124$var$dropDown","$463ad9cb83219124$var$dropMenuLibrary","querySelectorAll","$463ad9cb83219124$var$modalEl","addEventListener","$463ad9cb83219124$var$fetchFromLibrary","$463ad9cb83219124$var$renderedMovies","movieIds","JSON","parse","localStorage","getItem","length","console","log","innerHTML","classList","remove","add","fetchMovies","map","movie","fetch","concat","id","then","data","json","Promise","all","movieData","_renderedMovies","push","apply","$parcel$interopDefault","moviesById","$463ad9cb83219124$var$movieMarkUp","insertAdjacentHTML","catch","error","dataComing","item","poster_path","original_title","release_date","popularity","vote_average","genre","genres","name","slice","join","year","moviePoster","rating","width","Math","round","window","onload","e","genreSelected","target","dataset","filter","chosenMovies","toLowerCase","includes","galleryItems","galleryItems1"],"version":3,"file":"library.7528ea58.js.map"}