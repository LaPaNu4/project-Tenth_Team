{"mappings":"oeACA,IAAAA,EAAAC,EAAA,S,WAGA,MAIMC,EAAeC,SAASC,cAAc,mBAuB5CC,iBACE,IACE,MAAMC,QArBVD,iBAIE,aAHuBL,EAAAO,QAAMC,IAAI,yFACTF,KAAKG,O,CAmBRC,GAEnB,GAAoB,IAAhBJ,EAAKK,OAEP,YAyGJT,EAAaU,UAAY,yNAtGvB,MACMC,EAAaP,EADAQ,KAAKC,MAAMD,KAAKE,SAAWV,EAAKK,SAE7CM,EAASJ,EAAWK,GACpBC,QAmCVd,gBAA4Be,cAC1BA,EAAaC,UACbA,EAASC,MACTA,EAAKC,SACLA,EAAQC,aACRA,EAAYC,WACZA,EAAUC,aACVA,EAAYC,WACZA,IAEA,MAAMC,QArERvB,eAA6BwB,GAC3B,MACMvB,SADiBN,EAAAO,QAAMC,IAAI,2FACXF,KAAKwB,OAO3B,OALmBD,EAASE,KAAIC,GAChB1B,EAAK2B,MAAKC,GAASA,EAAMhB,KAAOc,IACjCG,OAGGC,KAAK,K,CA4DEC,CAAchB,GAEvC,MAAO,yFAGuCD,yBAC5BE,qFAIcA,2PAMkBI,uNAKjBF,iCAA4CC,iQAQpCE,EAAWW,QAAQ,+KAIjBV,8JAMJL,iJ,CApFhBgB,CAAa1B,GA8FhB2B,EA7FLrB,EA8FfjB,EAAaU,UAAY4B,EA5FvB,MAAMC,EAActC,SAASC,cAAc,yBAC3C,IAAIsC,EAAaC,aAAaC,QAAQ,kBAClCC,EAAcC,KAAKC,MAAML,GAC7BG,EAAcA,GAA4B,GAEtCA,EAAYG,SAAS/B,GACvBwB,EAAYQ,YAAc,yBAE1BR,EAAYQ,YAAc,oBAG5BR,EAAYS,iBAAiB,SAAS,KACpC,IAAIC,EAAaR,aAAaC,QAAQ,kBAClCQ,EAAcN,KAAKC,MAAMI,GAG3B,GAFFC,EAAcA,GAA4B,GAEnCA,EAAYJ,SAAS/B,GAIrB,CACL,IAAIoC,EAAQD,EAAYE,WAAUpC,GAAMA,IAAOD,IAC/CmC,EAAYG,OAAOF,EAAO,GAC1BV,aAAaa,QA5DE,iBA4DsBV,KAAKW,UAAUL,IACpDX,EAAYQ,YAAc,mB,MAP1BG,EAAYM,KAAKzC,GACjB0B,aAAaa,QAvDE,iBAuDsBV,KAAKW,UAAUL,IACpDX,EAAYQ,YAAc,wB,IAQ9B,MAAOU,GACPC,QAAQC,IAAIF,E,CA+DhB,IAAsBnB,C,CActBsB","sources":["src/js/upcomingThisMounth.js"],"sourcesContent":["\nimport axios from 'axios';\nimport { result } from 'lodash';\n\nconst URL = 'https://api.themoviedb.org/3/movie/upcoming';\nconst API_KEY = '0b7ed72c0b07bc683ffc3b8a0e430792';\nconst GENRE_URL = `https://api.themoviedb.org/3/genre/movie/list`;\n\nconst upcomingFilm = document.querySelector('.upcoming-film');\nconst favoriteMovies = 'favoriteMovies';\n\n\nasync function getUpcomingData() {\n  const response = await axios.get(`${URL}?api_key=${API_KEY}`);\n  const result = response.data.results;\n\n  return result;\n}\n\nasync function getGenresById(genreIds) {\n  const response = await axios.get(`${GENRE_URL}?api_key=${API_KEY}`);\n  const data = response.data.genres;\n\n  const genreNames = genreIds.map(genreId => {\n    const genre = data.find(genre => genre.id === genreId);\n    return genre.name;\n  });\n\n  return genreNames.join(', ');\n}\n\nasync function getUpcoming() {\n  try {\n    const data = await getUpcomingData();\n\n    if (data.length === 0) {\n      renderMarkupError();\n      return;\n    }\n\n    const randomFilm = Math.floor(Math.random() * data.length);\n    const renderFilm = data[randomFilm];\n    const idFilm = renderFilm.id;\n    const render = await createMarkup(renderFilm);\n    renderMarkup(render);\n\n    const upcomingBtn = document.querySelector('.upcoming_content_btn');\n    let savedLocal = localStorage.getItem('favoriteMovies');\n    let parsedLocal = JSON.parse(savedLocal);\n    parsedLocal = parsedLocal ? parsedLocal : [];\n\n    if (parsedLocal.includes(idFilm)) {\n      upcomingBtn.textContent = 'Remove from my library';\n    } else {\n      upcomingBtn.textContent = 'Add to my library';\n    }\n\n    upcomingBtn.addEventListener('click', () => {\n      let savedLocal = localStorage.getItem('favoriteMovies');\n      let parsedLocal = JSON.parse(savedLocal);\n      parsedLocal = parsedLocal ? parsedLocal : [];\n\n        if (!parsedLocal.includes(idFilm)) {\n        parsedLocal.push(idFilm);\n        localStorage.setItem(favoriteMovies, JSON.stringify(parsedLocal));\n        upcomingBtn.textContent = 'Remove from my library';\n      } else {\n        let index = parsedLocal.findIndex(id => id === idFilm);\n        parsedLocal.splice(index, 1);\n        localStorage.setItem(favoriteMovies, JSON.stringify(parsedLocal));\n        upcomingBtn.textContent = 'Add to my library';\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function createMarkup({\n  backdrop_path,\n  genre_ids,\n  title,\n  overview,\n  vote_average,\n  vote_count,\n  release_date,\n  popularity,\n}) {\n  const genreNames = await getGenresById(genre_ids);\n\n  return `\n    <img\n      class=\"upcoming_img\"\n      src=\"https://image.tmdb.org/t/p/original${backdrop_path}\"\n      alt=\"Poster ${title}\"\n    />\n\n    <div class=\"upcoming_content\">\n      <h3 class=\"upcoming_name\">${title}</h3>\n\n      <div class=\"upcoming_thumb\">\n        <ul class=\"upcoming-list left\">\n          <li class=\"upcoming_list_item\">\n            <p class=\"upcoming_list_text color-h\">Release date</p>\n            <p class=\"upcoming_list_date color-p\">${release_date}</p>\n          </li>\n          <li class=\"upcoming_list_item\">\n            <p class=\"upcoming_list_text color-h\">Vote / Votes</p>\n            <p class=\"upcoming_list_vote\">\n              <span class=\"vote\">${vote_average}</span> / <span class=\"vote\">${vote_count}</span>\n            </p>\n          </li>\n        </ul>\n\n        <ul class=\"upcoming-list right\">\n          <li class=\"upcoming_list_item\">\n            <p class=\"upcoming_list_text color-h\">Popularity</p>\n            <p class=\"upcoming_list_pop\">${popularity.toFixed(1)}</p>\n          </li>\n          <li class=\"upcoming_list_item\">\n            <p class=\"upcoming_list_text color-h\">Genre</p>\n            <p class=\"upcoming_list_genre\">${genreNames}</p>\n          </li>\n        </ul>\n      </div>\n\n      <h3 class=\"upcoming_content_title color-h\">About</h3>\n      <p class=\"upcoming_content_text\">${overview}</p>\n\n      <button type=\"button\" class=\"upcoming_content_btn\" id=\"addLibrary\">\n         Add to my library\n      </button>\n    </div>\n  `;\n}\n\n\nfunction renderMarkup(markup) {\n  upcomingFilm.innerHTML = markup;\n}\n\nfunction renderMarkupError() {\n  upcomingFilm.innerHTML = `<div class=\"upcoming-error-container\">\n    <p class=\"upcoming_error_container_text\">\n    OOPS...<br />\n    We are very sorry!<br />\n    But we couldn't find any upcoming movies this month.\n    </p>\n  </div>`;\n}\n\ngetUpcoming();"],"names":["$2shzp","parcelRequire","$5808bbd92508667f$var$upcomingFilm","document","querySelector","async","data","default","get","results","$5808bbd92508667f$var$getUpcomingData","length","innerHTML","renderFilm","Math","floor","random","idFilm","id","render","backdrop_path","genre_ids","title","overview","vote_average","vote_count","release_date","popularity","genreNames","genreIds","genres","map","genreId","find","genre","name","join","$5808bbd92508667f$var$getGenresById","toFixed","$5808bbd92508667f$var$createMarkup","markup","upcomingBtn","savedLocal1","localStorage","getItem","parsedLocal1","JSON","parse","includes","textContent","addEventListener","savedLocal","parsedLocal","index","findIndex","splice","setItem","stringify","push","error","console","log","$5808bbd92508667f$var$getUpcoming"],"version":3,"file":"index.b7f6badf.js.map"}