{"mappings":"oeAAAA,EAAA,SAAMC,IAEN,MAAMC,EAAUC,SAASC,cAAc,mBAEjCC,GADaF,SAASC,cAAc,gBACzBD,SAASC,cAAc,UAClCE,EAAeH,SAASC,cAAc,kBACtCG,EAAWJ,SAASC,cAAc,qBAChBD,SAASC,cAAc,0BAsC/CC,EAASG,UAAUC,IAAI,QACvBH,EAAaE,UAAUC,IAAI,QAC3BF,EAASC,UAAUC,IAAI,QAGvB,MAAMC,EAAiB,GAwCvB,MAgBMC,EAAeC,GAEVA,EAAWC,KAAIC,IAClB,MAAMC,YAAEA,EAAWC,eAAEA,EAAcC,aAAEA,EAAYC,WAAEA,EAAUC,GAAEA,GAAOL,EAKtE,MAAO,4FAEuCK,kFACuBJ,0IAG3BC,iHAV5BF,EAAKM,OAAOP,KAAIO,GAAUA,EAAOC,OAAMC,MAAM,EAAG,GAAGC,KAAK,kEAEzDT,EAAKG,aAAaK,MAAM,EAAG,6NAkBlC,IACPC,KAAK,IAGZC,OAAOC,OAlFP,WACI,MAAMC,EAAWC,KAAKC,MAAMC,aAAaC,QAT7B,mBAWZ,IAAIJ,GAAgC,IAApBA,EAASK,OAGrB,OAFAzB,EAAaE,UAAUwB,OAAO,aAC9B1B,EAAaE,UAAUC,IAAI,QAI/B,MAEMwB,EAAcP,EAASb,KAAIqB,GACtBC,MAAM,sCAAcD,EAAMf,+CAChCiB,MAAKC,GAAQA,EAAKC,WAGvBC,QAAQtC,IAAIgC,GACPG,MAAKI,IAEF9B,EAAe+B,QAAQD,GAGvBtC,EAAQwC,UAAY,GAEpB,MAAMC,EAAahC,EAAY6B,GAE/BtC,EAAQ0C,mBAAmB,YAAaD,GACxCtC,EAASG,UAAUC,IAAI,QACvBJ,EAASG,UAAUwB,OAAO,QAC1BzB,EAASC,UAAUC,IAAI,QACvBF,EAASC,UAAUwB,OAAO,OAAO,IAEpCa,OAAMC,IACHC,QAAQC,IAAIF,EAAM,G","sources":["src/js/library-II.js"],"sourcesContent":["const { all } = require(\"axios\");\n\nconst gallery = document.querySelector('.movies-gallery');\nconst searchMore = document.querySelector('.search-more');\nconst loadMore = document.querySelector('.load');\nconst emptyGallery = document.querySelector('.empty-gallery');\nconst dropDown = document.querySelector('.dropdown-library');\nconst dropMenuLibrary = document.querySelector('.dropdown-menu-library');\n\n\n//adding dropdown functionality\n// const dropContent = document.querySelector('.drop-content');\n// const genresBtn = document.querySelector('.drop');\n// const pickedGenre = document.querySelector('.drop-item');\n\n// const dropShow = () => {\n//     if(dropContent.classList.contains('show')) {\n//         dropContent.classList.remove('show');\n//         dropContent.classList.add('hide');\n//     } else {\n//         dropContent.classList.add('show');\n//         dropContent.classList.remove('hide');\n//     }\n// }\n\n// const chosenGenre = (e) => {\n//     e.preventDefault();\n//     let chosen = e.target;\n//     console.log(chosen);\n//\n//     chosen.classList.toggle('orange');\n//     genresBtn.classList.remove('orange');\n//\n//     genresBtn.textContent = chosen.textContent;\n//\n//     dropContent.classList.remove('show');\n//     chosen.classList.remove('orange');\n// }\n//\n// genresBtn.addEventListener('click', dropShow);\n// dropContent.addEventListener('click', chosenGenre);\n\n\n\nconst STORAGE = 'favoriteMovies';\nloadMore.classList.add('hide');\nemptyGallery.classList.add('hide');\ndropDown.classList.add('hide');\n\n\nconst renderedMovies = [];\n\nfunction fetchFromLibrary() {\n    const movieIds = JSON.parse(localStorage.getItem(STORAGE));\n    \n    if(!movieIds || movieIds.length === 0) {\n        emptyGallery.classList.remove('hide');\n        emptyGallery.classList.add('show');\n        return;\n    }\n\n    const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n    const API_KEY = '14b16a10583a3d9315723a356100e4ad';\n    const fetchMovies = movieIds.map(movie => {\n        return fetch(`${BASE_URL}${movie.id}?api_key=${API_KEY}`)\n        .then(data => data.json());\n    });\n\n    Promise.all(fetchMovies)\n        .then(movieData => {\n            // console.log(movieData)\n            renderedMovies.push(...movieData);\n            // console.log(renderedMovies);\n\n            gallery.innerHTML = '';\n\n            const moviesById = movieMarkUp(movieData);\n            // console.log(moviesById);\n            gallery.insertAdjacentHTML('beforeend', moviesById);\n            loadMore.classList.add('show');\n            loadMore.classList.remove('hide');\n            dropDown.classList.add('show');\n            dropDown.classList.remove('hide');\n        })            \n        .catch(error => {\n            console.log(error);\n        });\n    }    \n\n\nconst filterMoviesByGenre = (movies) => {\n    const genre = dropMenuLibrary.value;\n\n    const chosenMovies = movies.filter(movie => movie.genre === genre);\n    if(chosenMovies.length > 0) {\n        const galleryItems = movieMarkUp(chosenMovies);\n        gallery.insertAdjacentHTML('beforeend', galleryItems);\n        loadMore.classList.add('show');\n        loadMore.classList.remove('hide');\n    } else {\n        gallery.innerHTML = '';\n        loadMore.classList.add('hide');\n        loadMore.classList.remove('show');\n    }\n}    \n\nconst movieMarkUp = (dataComing) => {\n\n    return dataComing.map(item => {\n        const { poster_path, original_title, release_date, popularity, id } = item;\n        const genre = item.genres.map(genres => genres.name).slice(0, 2).join(', ');\n        // console.log(typeof(genre)); \n        const year = item.release_date.slice(0, 4);\n\n        return `\n        <li class=\"movie-item\"  >\n            <div class=\"movie\" data-catalog-item id=${id}>\n                <img class=\"movie-img\" src=\"https://image.tmdb.org/t/p/w500${poster_path}\">\n                <div class=\"movie-info\">\n                    <div class=\"info\">\n                        <h2 class=\"movie-title\">${original_title}</h2>\n                        <div class=\"genre_year\">\n                            <h2 class=\"movie-genre\">${genre}</h2>\n                            <h2 class=\"movie-year\">${year}</h2></div>\n                        </div>\n                    <div>\n                        <span class=\"movie-rating\"></span>\n                    </div>\n                </div>\n            </div>\n        </li>`;\n    }).join('');\n}\n\nwindow.onload = fetchFromLibrary;\n//dropDown.addEventListener('click', () => filterMoviesByGenre(renderedMovies));\n\n\n"],"names":["parcelRequire","all","$c7fffb47ad68bea0$var$gallery","document","querySelector","$c7fffb47ad68bea0$var$loadMore","$c7fffb47ad68bea0$var$emptyGallery","$c7fffb47ad68bea0$var$dropDown","classList","add","$c7fffb47ad68bea0$var$renderedMovies","$c7fffb47ad68bea0$var$movieMarkUp","dataComing","map","item","poster_path","original_title","release_date","popularity","id","genres","name","slice","join","window","onload","movieIds","JSON","parse","localStorage","getItem","length","remove","fetchMovies","movie","fetch","then","data","json","Promise","movieData","push","innerHTML","moviesById","insertAdjacentHTML","catch","error","console","log"],"version":3,"file":"library.b2c31bfe.js.map"}