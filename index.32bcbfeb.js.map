{"mappings":"oeACA,IAAAA,EAAAC,EAAA,SAEA,MAMMC,EAAcC,SAASC,cAAc,wBAE3C,SAASC,IAIP,OAAOL,EAAAM,QAAMC,IAFX,6FAEoBC,MAAKC,GAClBA,EAAKA,M,CASTC,eAAeC,IAGpB,MAAO,CAAEC,aATXF,iBACE,MAAMD,KAAEA,SAAeT,EAAAM,QAAMC,IAC3B,0FAEF,OAAOE,C,CAGcI,GAAiBL,MAAK,EAACI,OAAEA,KAAaA,I,CAK7D,SAASE,EAAaC,GACpBJ,IAAYH,MAAK,EAACI,OAAEA,MAClB,GAAIG,EAAS,CACXA,EAAQC,SAAQC,IACd,MAAMC,UAAEA,EAASC,aAAEA,GAAiBF,EACpCL,EAAOI,SAAQ,EAACI,KAAEA,EAAIC,GAAEA,MAClBH,EAAUI,SAASD,KACjBH,EAAUK,OAAS,GACrBL,EAAUM,OAAO,EAAGN,EAAUK,OAAS,GAEzCL,EAAUM,OAAON,EAAUO,QAAQJ,GAAK,EAAGD,IAE7CH,EAAKS,YAAcR,EAAUS,KAAK,MAC9BV,EAAKE,eACPF,EAAKE,aAAeA,EAAaS,MAAM,EAAG,GAAE,GAE9C,IAEJ,MAAMC,EAOZ,SAAsBd,GAEpB,OAAOA,EACJa,MAAM,EAAG,GACTE,KACC,EAACC,eACCA,EAAcZ,aACdA,EAAYD,UACZA,EAASc,YACTA,EAAWC,aACXA,EAAYZ,GACZA,MAEA,IAAIa,EAAY,GAEdA,EADEF,EACU,kCAA6BA,IAE7B,mCAGd,IAAIG,EAAY,GAChB,IAAK,IAAIC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,IAAIC,EAAY,YACR,EAAJD,EAAQH,EACVI,EAAY,UACC,EAAJD,EAAQ,EAAIH,IACrBI,EAAY,kBAEdF,GAAa,wBAAwBE,a,CAEvC,MAAO,6EAA6EhB,qEACxCa,WAAmBH,yBAAsCV,yJAG1DU,4IAG5Bb,OAAeC,k8BAqB1B,IAGPQ,KAAK,G,CApEeW,CAAavB,GAC5Bb,IACFA,EAAYqC,UAAYV,E,KAoEDxB,IAAeG,MAAK,EAACO,QAAEA,KAC7CD,EAAaC,KAsBtByB,OAAOC,iBAAiB,UAjBxB,WACMD,OAAOE,WAAa,IACtBrC,IAAgBG,MAAKmC,IAEnB7B,EADc,CAAC6B,EAAK5B,QAAQ,KAEzBP,MAAKC,GAASmC,SAASL,UAAY9B,IACnCoC,OAAMC,GAASC,QAAQC,IAAIF,IAAO,IAGvCzC,IAAgBG,MAAKyC,IAEnBnC,EADcmC,EAAKlC,QAAQa,MAAM,EAAG,IAEjCpB,MAAKC,GAASmC,SAASL,UAAY9B,IACnCoC,OAAMC,GAASC,QAAQC,IAAIF,IAAO,G","sources":["src/js/weekly-trends.js"],"sourcesContent":["// weekly-trends\nimport axios from 'axios';\n\nconst URL =\n  'https://api.themoviedb.org/3/trending/movie/week?api_key=ee5376443abaeb243d053aa1ffc4ea05';\nconst IMG_BASE_URL = `https://image.tmdb.org/t/p`;\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst IMG_W400 = `/w400`;\nconst API_KEY = 'ee5376443abaeb243d053aa1ffc4ea05';\nconst galleryList = document.querySelector('.gallery-weekly-list');\n\nfunction getTrendData() {\n  const URL =\n    'https://api.themoviedb.org/3/trending/movie/week?api_key=ee5376443abaeb243d053aa1ffc4ea05';\n\n  return axios.get(URL).then(data => {\n    return data.data;\n  });\n}\nasync function getMovieGenres() {\n  const { data } = await axios.get(\n    `${BASE_URL}/genre/movie/list?api_key=${API_KEY}`\n  );\n  return data;\n}\nexport async function getGenres() {\n  const genres = await getMovieGenres().then(({ genres }) => genres);\n\n  return { genres };\n}\n\nfunction renderMarkup(results) {\n  getGenres().then(({ genres }) => {\n    if (results) {\n      results.forEach(film => {\n        const { genre_ids, release_date } = film;\n        genres.forEach(({ name, id }) => {\n          if (genre_ids.includes(id)) {\n            if (genre_ids.length > 2) {\n              genre_ids.splice(2, genre_ids.length - 1);\n            }\n            genre_ids.splice(genre_ids.indexOf(id), 1, name);\n          }\n          film.genre_names = genre_ids.join(', ');\n          if (film.release_date) {\n            film.release_date = release_date.slice(0, 4);\n          }\n        });\n      });\n      const markupList = createMarkup(results);\n      if (galleryList) {\n        galleryList.innerHTML = markupList;\n      }\n    }\n  });\n}\nfunction createMarkup(results) {\n  // console.log(results);\n  return results\n    .slice(0, 3)\n    .map(\n      ({\n        original_title,\n        release_date,\n        genre_ids,\n        poster_path,\n        vote_average,\n        id,\n      }) => {\n        let posterIMG = ``;\n        if (poster_path) {\n          posterIMG = `${IMG_BASE_URL}${IMG_W400}${poster_path}`;\n        } else {\n          posterIMG = 'https://i.ibb.co/C0LFwTh/OIF.jpg';\n        }\n\n        let starIcons = '';\n        for (let i = 1; i <= 5; i++) {\n          let starClass = 'fa-star-o';\n          if (i * 2 < vote_average) {\n            starClass = 'fa-star';\n          } else if (i * 2 - 1 < vote_average) {\n            starClass = 'fa-star-half-o';\n          }\n          starIcons += `<span class=\"fa star ${starClass}\"> </span>`;\n        }\n        return ` <li class='gallery-weekly__list-elem hover-cursor' data-catalog-item id='${id}'>           \n          <img class='gallery-weekly__image' src=\"${posterIMG}\" alt=\"${original_title}\" loading=\"lazy\" id='${id}'>\n         <div class='gallery-weekly__all-info'> \n          <div class=\"gallery-weekly__info\">\n              <h3 class= 'gallery-weekly__title'>${original_title}</h3>\n              <div class='cards-list_second_line'>\n                <div class='cards-list__text color-h'>\n                  <p>${genre_ids} | ${release_date}</p>\n                </div>\n              </div>\n          </div>\n          \n        </div>\n        <div class=\"form_item_weekly\">\n            <div class=\"form_lebel\"> </div>\n            <div data-ajax=\"true\" class=\"rating_weekly rating_set rating-hero\">\n                <div class=\"rating_body\">\n                    <div class=\"rating_active\"></div>\n                    <div class=\"rating_items\">\n                        <input type=\"radio\" class=\"rating_item\" value=\"1\" name=\"rating\">\n                        <input type=\"radio\" class=\"rating_item\" value=\"2\" name=\"rating\">\n                        <input type=\"radio\" class=\"rating_item\" value=\"3\" name=\"rating\">\n                        <input type=\"radio\" class=\"rating_item\" value=\"4\" name=\"rating\">\n                        <input type=\"radio\" class=\"rating_item\" value=\"5\" name=\"rating\">\n                    </div>\n                </div>\n            </div>\n        </div>\n      </li>`;\n      }\n    )\n    .join('');\n}\nexport const getWeeklyTrends = getTrendData().then(({ results }) => {\n  return renderMarkup(results);\n});\n\n// Функція, яка для екрану менше 768 рх показує один постер\n\nfunction renderWeeklyFilms() {\n  if (window.innerWidth < 768) {\n    getTrendData(1).then(data => {\n      const films = [data.results[0]];\n      renderMarkup(films)\n        .then(data => (filmList.innerHTML = data))\n        .catch(error => console.log(error));\n    });\n  } else {\n    getTrendData(1).then(data => {\n      const films = data.results.slice(0, 3);\n      renderMarkup(films)\n        .then(data => (filmList.innerHTML = data))\n        .catch(error => console.log(error));\n    });\n  }\n}\nwindow.addEventListener('resize', renderWeeklyFilms);\n"],"names":["$2shzp","parcelRequire","$d395fb91404b7f70$var$galleryList","document","querySelector","$d395fb91404b7f70$var$getTrendData","default","get","then","data","async","$d395fb91404b7f70$export$c5604fa8028da00","genres","$d395fb91404b7f70$var$getMovieGenres","$d395fb91404b7f70$var$renderMarkup","results","forEach","film","genre_ids","release_date","name","id","includes","length","splice","indexOf","genre_names","join","slice","markupList","map","original_title","poster_path","vote_average","posterIMG","starIcons","i","starClass","$d395fb91404b7f70$var$createMarkup","innerHTML","window","addEventListener","innerWidth","data1","filmList","catch","error","console","log","data2"],"version":3,"file":"index.32bcbfeb.js.map"}