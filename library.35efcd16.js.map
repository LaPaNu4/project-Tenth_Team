{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAAMC,EAAUC,SAASC,cAAc,mBAEjCC,GADaF,SAASC,cAAc,gBACzBD,SAASC,cAAc,UAClCE,EAAeH,SAASC,cAAc,kBAEtCG,EAAWJ,SAASC,cAAc,qBAElCI,GADkBL,SAASM,iBAAiB,0BAC1BN,SAASC,cAAc,2BAK/CC,EAASK,UAAUC,IAAI,QACvBL,EAAaI,UAAUC,IAAI,QAC3BJ,EAASG,UAAUC,IAAI,QAEvB,IAAMC,EAAiB,GAwCnB,IA4BEC,EAAc,SAACC,GACjB,OAAOA,EAAWC,KAAI,SAAAC,GAClB,IAAQC,EAA8DD,EAA9DC,YAAaC,EAAiDF,EAAjDE,eAA0CC,GAAOH,EAAjCI,aAAiCJ,EAAnBK,WAAmBL,EAAPG,IACzDG,EAAQN,EAAKO,OAAOR,KAAI,SAAAQ,G,OAAUA,EAAOC,I,IAAMC,MAAM,EAAG,GAAGC,KAAK,MAEhEC,EAAOX,EAAKI,aAAaK,MAAM,EAAG,GAClCG,EAAc,kCAA8CC,OAAZZ,GAMtD,YAJmBa,IAAhBb,GAA6C,KAAhBA,IAC5BW,EAAe,qCAGZ,4FAI8BC,OADSV,EAAG,kDAMPU,OALLD,EAAY,6IAOHC,OAFJX,EAAe,iHAGZW,OADCP,EAAM,8DACFO,OAALF,EAAK,4N,IAQnDD,KAAK,G,EAGZK,OAAOC,OArGP,WACI,IAAMC,EAAWC,KAAKC,MAAMC,aAAaC,QAR7B,mBAUZ,IAAIJ,GAAgC,IAApBA,EAASK,OAGrB,OAFAhC,EAAaI,UAAU6B,OAAO,aAC9BjC,EAAaI,UAAUC,IAAI,QAI/B,IAEM6B,EAAcP,EAASlB,KAAI,SAAA0B,GAC7B,OAAOC,MAAM,GAAcb,OAHd,uCAGkCA,OAApBY,EAAMtB,GAAG,aAAmBU,OAF3C,qCAGXc,MAAK,SAAAC,G,OAAQA,EAAKC,M,OAGvBC,QAAQC,IAAIP,GACPG,MAAK,SAAAK,G,IACFC,KAAArC,GAAesC,KAAfC,MAAAF,EAAoBG,EAAApD,EAAA,CAAGgD,IAEvB9C,EAAQmD,UAAY,GAEpB,IAAMC,EAAazC,EAAYmC,GAE/B9C,EAAQqD,mBAAmB,YAAaD,GACxChD,EAAaI,UAAUC,IAAI,QAC3BL,EAAaI,UAAU6B,OAAO,QAC9BlC,EAASK,UAAUC,IAAI,QACvBN,EAASK,UAAU6B,OAAO,QAC1BhC,EAASG,UAAUC,IAAI,QACvBJ,EAASG,UAAU6B,OAAO,O,IAE7BiB,OAAM,SAAAC,GACHC,QAAQC,IAAIF,E,KAsExBjD,EAAgBoD,iBAAiB,SAjED,SAACC,GACzB,IACMC,EADSD,EAAEE,OACYC,QAAQC,OACrCP,QAAQC,IAAIG,GACZJ,QAAQC,IAAI/C,GAGZ,IAAMsD,EAAetD,EAAeqD,QAAO,SAAAxB,GAEvC,OADoBA,EAAMlB,OAAOR,KAAI,SAAAO,G,OAASA,EAAME,KAAK2C,a,IACtCC,SAASN,EAAcK,c,IAK9C,GAHAT,QAAQC,IAAIO,GAGRA,EAAa5B,OAAS,EAAG,CAC7BpC,EAAQmD,UAAY,GACpB,IAAMgB,EAAexD,EAAYqD,GACjChE,EAAQqD,mBAAmB,YAAac,GACxChE,EAASK,UAAUC,IAAI,QACvBN,EAASK,UAAU6B,OAAO,O,MAE1BrC,EAAQmD,UAAY,gDAA8DxB,OAAdiC,EAAc,mCAClFzD,EAASK,UAAUC,IAAI,QACvBN,EAASK,UAAU6B,OAAO,O","sources":["src/js/library-II.js"],"sourcesContent":["\nconst gallery = document.querySelector('.movies-gallery');\nconst searchMore = document.querySelector('.search-more');\nconst loadMore = document.querySelector('.load');\nconst emptyGallery = document.querySelector('.empty-gallery');\n\nconst dropDown = document.querySelector('.dropdown-library');\nconst dropLibraryItem = document.querySelectorAll('.dropdown-item-library');\nconst dropMenuLibrary = document.querySelector('.dropdown-menu-library');\n\n\n\nconst STORAGE = 'favoriteMovies';\nloadMore.classList.add('hide');\nemptyGallery.classList.add('show');\ndropDown.classList.add('hide');\n\nconst renderedMovies = [];\n\nfunction fetchFromLibrary() {\n    const movieIds = JSON.parse(localStorage.getItem(STORAGE));\n    \n    if(!movieIds || movieIds.length === 0) {\n        emptyGallery.classList.remove('hide');\n        emptyGallery.classList.add('show');\n        return;\n    }\n\n    const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n    const API_KEY = '14b16a10583a3d9315723a356100e4ad';\n    const fetchMovies = movieIds.map(movie => {\n        return fetch(`${BASE_URL}${movie.id}?api_key=${API_KEY}`)\n        .then(data => data.json());\n    });\n\n    Promise.all(fetchMovies)\n        .then(movieData => {\n            renderedMovies.push(...movieData);\n\n            gallery.innerHTML = '';\n\n            const moviesById = movieMarkUp(movieData);\n\n            gallery.insertAdjacentHTML('beforeend', moviesById);\n            emptyGallery.classList.add('hide');\n            emptyGallery.classList.remove('show');\n            loadMore.classList.add('show');\n            loadMore.classList.remove('hide');\n            dropDown.classList.add('show');\n            dropDown.classList.remove('hide');\n        })                    \n        .catch(error => {\n            console.log(error);\n        });\n    }    \n\n\n    const filterMoviesByGenre = (e) => {\n        const target = e.target;\n        const genreSelected = target.dataset.filter; \n        console.log(genreSelected);\n        console.log(renderedMovies);\n   \n\n        const chosenMovies = renderedMovies.filter(movie => {\n            const movieGenres = movie.genres.map(genre => genre.name.toLowerCase());\n            return movieGenres.includes(genreSelected.toLowerCase());\n        });\n        console.log(chosenMovies);\n\n          \n        if (chosenMovies.length > 0) {\n        gallery.innerHTML = ''; \n        const galleryItems = movieMarkUp(chosenMovies);\n        gallery.insertAdjacentHTML('beforeend', galleryItems);\n        loadMore.classList.add('show');\n        loadMore.classList.remove('hide');\n        } else {\n        gallery.innerHTML = `<h1 class=\"np_chosen\">Sorry but there are no ${genreSelected} movies in your Library...</h1>`;\n        loadMore.classList.add('hide');\n        loadMore.classList.remove('show');\n        }\n  }\n\n\nconst movieMarkUp = (dataComing) => {\n    return dataComing.map(item => {\n        const { poster_path, original_title, release_date, popularity, id } = item;\n        const genre = item.genres.map(genres => genres.name).slice(0, 2).join(', ');\n\n        const year = item.release_date.slice(0, 4);\n        const moviePoster = `https://image.tmdb.org/t/p/w500${poster_path}`;\n        \n        if(poster_path === undefined || poster_path === \"\") {\n            moviePoster = `./images/hero-img/coming-soon.jpg`;\n        }\n\n        return `\n\n        <li class=\"movie-item\">\n            <div class=\"movie\" data-catalog-item id=${id}>\n                <img class=\"movie-img\" src=${moviePoster}>\n\n\n                <div class=\"movie-info\">\n                    <div class=\"info\">\n                        <h2 class=\"movie-title\">${original_title}</h2>\n                        <div class=\"genre_year\">\n                            <h2 class=\"movie-genre\">${genre}</h2>\n                            <h2 class=\"movie-year\">${year}</h2></div>\n                        </div>\n                    <div>\n                        <span class=\"movie-rating\"></span>\n                    </div>\n                </div>\n            </div>\n        </li>`;\n    }).join('');\n}\n\nwindow.onload = fetchFromLibrary;\n\ndropMenuLibrary.addEventListener('click', filterMoviesByGenre);\n\n\n"],"names":["$8nrFW","parcelRequire","$463ad9cb83219124$var$gallery","document","querySelector","$463ad9cb83219124$var$loadMore","$463ad9cb83219124$var$emptyGallery","$463ad9cb83219124$var$dropDown","$463ad9cb83219124$var$dropMenuLibrary","querySelectorAll","classList","add","$463ad9cb83219124$var$renderedMovies","$463ad9cb83219124$var$movieMarkUp","dataComing","map","item","poster_path","original_title","id","release_date","popularity","genre","genres","name","slice","join","year","moviePoster","concat","undefined","window","onload","movieIds","JSON","parse","localStorage","getItem","length","remove","fetchMovies","movie","fetch","then","data","json","Promise","all","movieData","_renderedMovies","push","apply","$parcel$interopDefault","innerHTML","moviesById","insertAdjacentHTML","catch","error","console","log","addEventListener","e","genreSelected","target","dataset","filter","chosenMovies","toLowerCase","includes","galleryItems"],"version":3,"file":"library.35efcd16.js.map"}