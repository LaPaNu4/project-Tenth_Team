{"mappings":"oeACA,IAAAA,EAAAC,EAAA,S,WAGA,MAIMC,EAAeC,SAASC,cAAc,mBAuB5CC,iBACE,IACE,MAAMC,QArBVD,iBAIE,aAHuBL,EAAAO,QAAMC,IAAI,yFACTF,KAAKG,O,CAmBRC,GAEnB,GAAoB,IAAhBJ,EAAKK,OAEP,YA2GJT,EAAaU,UAAY,yNAxGvB,MACMC,EAAaP,EADAQ,KAAKC,MAAMD,KAAKE,SAAWV,EAAKK,SAE7CM,EAASJ,EAAWK,GAAGC,WACvBC,QAkCVf,gBAA4BgB,YAC1BA,EAAWC,cACXA,EAAaC,UACbA,EAASC,MACTA,EAAKC,SACLA,EAAQC,aACRA,EAAYC,WACZA,EAAUC,aACVA,EAAYC,WACZA,IAEA,MAAMC,QArERzB,eAA6B0B,GAC3B,MACMzB,SADiBN,EAAAO,QAAMC,IAAI,2FACXF,KAAK0B,OAO3B,OALmBD,EAASE,KAAIC,GAChB5B,EAAK6B,MAAKC,GAASA,EAAMlB,KAAOgB,IACjCG,OAGGC,KAAK,K,CA4DEC,CAAchB,GAErC,MAAO,0GAIiDD,6GACAD,uGACNA,iIAIpBG,2PAMkBI,uNAKjBF,iCAA4CC,iQAQpCE,EAAWW,QAAQ,+KAIjBV,8JAMJL,iJ,CAtFhBgB,CAAa5B,GAgGhB6B,EA/FLtB,EAgGblB,EAAaU,UAAY8B,EA9FzB,MAAMC,EAAcxC,SAASC,cAAc,yBAC3C,IAAIwC,EAAaC,aAAaC,QAAQ,kBAClCC,EAAcC,KAAKC,MAAML,GAC7BG,EAAcA,GAA4B,GAEtCA,EAAYZ,MAAKe,GAASA,EAAMhC,KAAOD,MACzC0B,EAAYQ,YAAc,0BAG5BR,EAAYS,iBAAiB,SAAS,KACpC,IAAIC,EAAaR,aAAaC,QAAQ,kBAClCQ,EAAcN,KAAKC,MAAMI,GAG7B,GAFAC,EAAcA,GAA4B,GAErCA,EAAYnB,MAAKe,GAASA,EAAMhC,KAAOD,IAKnC,CACL,IAAIsC,EAAQD,EAAYE,WAAUN,GAASA,EAAMhC,KAAOD,IACxDqC,EAAYG,OAAOF,EAAO,GAC1BV,aAAaa,QA3DA,iBA2DwBV,KAAKW,UAAUL,IACpDX,EAAYQ,YAAc,mB,KATuB,CACjD,MAAMS,EAAc,CAAE1C,GAAID,EAAQ4C,MAAO,IACzCP,EAAYQ,KAAKF,GACjBf,aAAaa,QAtDA,iBAsDwBV,KAAKW,UAAUL,IACpDX,EAAYQ,YAAc,wB,KAQhC,MAAOY,GACPC,QAAQC,IAAIF,E,CAkEhB,IAAsBrB,C,CActBwB","sources":["src/js/upcomingThisMounth.js"],"sourcesContent":["\nimport axios from 'axios';\nimport { result } from 'lodash';\n\nconst URL = 'https://api.themoviedb.org/3/movie/upcoming';\nconst API_KEY = '0b7ed72c0b07bc683ffc3b8a0e430792';\nconst GENRE_URL = `https://api.themoviedb.org/3/genre/movie/list`;\n\nconst upcomingFilm = document.querySelector('.upcoming-film');\nconst favoriteMovies = 'favoriteMovies';\n\n\nasync function getUpcomingData() {\n  const response = await axios.get(`${URL}?api_key=${API_KEY}`);\n  const result = response.data.results;\n\n  return result;\n}\n\nasync function getGenresById(genreIds) {\n  const response = await axios.get(`${GENRE_URL}?api_key=${API_KEY}`);\n  const data = response.data.genres;\n\n  const genreNames = genreIds.map(genreId => {\n    const genre = data.find(genre => genre.id === genreId);\n    return genre.name;\n  });\n\n  return genreNames.join(', ');\n}\n\nasync function getUpcoming() {\n  try {\n    const data = await getUpcomingData();\n\n    if (data.length === 0) {\n      renderMarkupError();\n      return;\n    }\n\n    const randomFilm = Math.floor(Math.random() * data.length);\n    const renderFilm = data[randomFilm];\n    const idFilm = renderFilm.id.toString();\n    const render = await createMarkup(renderFilm);\n    renderMarkup(render);\n\n    const upcomingBtn = document.querySelector('.upcoming_content_btn');\n    let savedLocal = localStorage.getItem('favoriteMovies');\n    let parsedLocal = JSON.parse(savedLocal);\n    parsedLocal = parsedLocal ? parsedLocal : [];\n\n    if (parsedLocal.find(movie => movie.id === idFilm)) {\n      upcomingBtn.textContent = 'Remove from my library';\n    } \n\n    upcomingBtn.addEventListener('click', () => {\n      let savedLocal = localStorage.getItem('favoriteMovies');\n      let parsedLocal = JSON.parse(savedLocal);\n      parsedLocal = parsedLocal ? parsedLocal : [];\n\n      if (!parsedLocal.find(movie => movie.id === idFilm)) {\n          const movieObject = { id: idFilm, start: '' };\n          parsedLocal.push(movieObject);\n          localStorage.setItem(favoriteMovies, JSON.stringify(parsedLocal));\n          upcomingBtn.textContent = 'Remove from my library';\n        } else {\n          let index = parsedLocal.findIndex(movie => movie.id === idFilm);\n          parsedLocal.splice(index, 1);\n          localStorage.setItem(favoriteMovies, JSON.stringify(parsedLocal));\n          upcomingBtn.textContent = 'Add to my library';\n        }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function createMarkup({\n  poster_path,\n  backdrop_path,\n  genre_ids,\n  title,\n  overview,\n  vote_average,\n  vote_count,\n  release_date,\n  popularity,\n}) {\n  const genreNames = await getGenresById(genre_ids);\n\n    return `\n  \n\n     <picture class='upcoming_img'>\n      <source srcset=\"https://image.tmdb.org/t/p/original/${backdrop_path}\" media=\"(min-width: 768px)\" loading=\"lazy\"/>\n      <source srcset=\"https://image.tmdb.org/t/p/original/${poster_path}\" media=\"(min-width: 320px)\" loading=\"lazy\"/>\n      <img src=\"https://image.tmdb.org/t/p/original/${poster_path}\" alt=\"Movie Poster\" loading=\"lazy\"/>\n    </picture>\n\n    <div class=\"upcoming_content\">\n      <h3 class=\"upcoming_name\">${title}</h3>\n\n      <div class=\"upcoming_thumb\">\n        <ul class=\"upcoming-list left\">\n          <li class=\"upcoming_list_item\">\n            <p class=\"upcoming_list_text color-h\">Release date</p>\n            <p class=\"upcoming_list_date color-p\">${release_date}</p>\n          </li>\n          <li class=\"upcoming_list_item\">\n            <p class=\"upcoming_list_text color-h\">Vote / Votes</p>\n            <p class=\"upcoming_list_vote\">\n              <span class=\"vote\">${vote_average}</span> / <span class=\"vote\">${vote_count}</span>\n            </p>\n          </li>\n        </ul>\n\n        <ul class=\"upcoming-list right\">\n          <li class=\"upcoming_list_item\">\n            <p class=\"upcoming_list_text color-h\">Popularity</p>\n            <p class=\"upcoming_list_pop\">${popularity.toFixed(1)}</p>\n          </li>\n          <li class=\"upcoming_list_item\">\n            <p class=\"upcoming_list_text color-h\">Genre</p>\n            <p class=\"upcoming_list_genre\">${genreNames}</p>\n          </li>\n        </ul>\n      </div>\n\n      <h3 class=\"upcoming_content_title color-h\">About</h3>\n      <p class=\"upcoming_content_text\">${overview}</p>\n\n      <button type=\"button\" class=\"upcoming_content_btn\" id=\"addLibrary\">\n         Add to my library\n      </button>\n    </div>\n  `;\n}\n\n\nfunction renderMarkup(markup) {\n    upcomingFilm.innerHTML = markup;\n}\n\nfunction renderMarkupError() {\n  upcomingFilm.innerHTML = `<div class=\"upcoming-error-container\">\n    <p class=\"upcoming_error_container_text\">\n    OOPS...<br />\n    We are very sorry!<br />\n    But we couldn't find any upcoming movies this month.\n    </p>\n  </div>`;\n}\n\ngetUpcoming();"],"names":["$2shzp","parcelRequire","$5808bbd92508667f$var$upcomingFilm","document","querySelector","async","data","default","get","results","$5808bbd92508667f$var$getUpcomingData","length","innerHTML","renderFilm","Math","floor","random","idFilm","id","toString","render","poster_path","backdrop_path","genre_ids","title","overview","vote_average","vote_count","release_date","popularity","genreNames","genreIds","genres","map","genreId","find","genre","name","join","$5808bbd92508667f$var$getGenresById","toFixed","$5808bbd92508667f$var$createMarkup","markup","upcomingBtn","savedLocal1","localStorage","getItem","parsedLocal1","JSON","parse","movie","textContent","addEventListener","savedLocal","parsedLocal","index","findIndex","splice","setItem","stringify","movieObject","start","push","error","console","log","$5808bbd92508667f$var$getUpcoming"],"version":3,"file":"index.2bc56832.js.map"}