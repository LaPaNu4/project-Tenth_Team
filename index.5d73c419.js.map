{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,S,gDAIA,IAEMC,EAAgB,6BAChBC,EAAW,+BACXC,EAAY,QACZC,EAAU,mCACVC,EAAcC,SAASC,cAAc,wB,SAW5BC,I,OAAAC,EAAcC,MAAAC,KAAAC,U,UAAdH,I,OAAAA,EAAfI,EAAAd,EAAA,CAAAc,EAAAC,GAAAC,MAAA,SAAAC,I,IACUC,E,kFAAeC,EAAAC,QAAMC,IAC3B,GAAwCC,OAArCnB,EAAS,8BAAoCmB,OAARjB,I,cADpCa,EAAMK,EAAAC,KAAJN,K,kBAGDA,G,4CAJoBP,MAAAC,KAAAC,U,UAMPY,I,OAAAA,EAAfX,EAAAd,EAAA,CAAAc,EAAAC,GAAAC,MAAA,SAAAC,I,IACCS,E,kFAAejB,IAAiBkB,MAAK,SAAAC,G,OAASA,EAANC,M,kBAAxCH,EAAMH,EAAAC,K,kBAEL,CAAEK,OAAAH,I,4CAHoBf,MAAAC,KAAAC,U,CAM/B,SAASiB,EAAaC,I,kBANAN,EAASd,MAAAC,KAAAC,U,EAO7BmB,GAAYL,MAAK,SAAAM,G,IAAGJ,EAAMI,EAANJ,OAClB,GAAIE,EAAS,CACXA,EAAQG,SAAQ,SAAAC,GACd,IAAQC,EAA4BD,EAA5BC,UAAWC,EAAiBF,EAAjBE,aACnBR,EAAOK,SAAQ,SAAAN,G,IAAGU,EAAIV,EAAJU,KAAMC,EAAEX,EAAFW,GAClBH,EAAUI,SAASD,KACjBH,EAAUK,OAAS,GACrBL,EAAUM,OAAO,EAAGN,EAAUK,OAAS,GAEzCL,EAAUM,OAAON,EAAUO,QAAQJ,GAAK,EAAGD,IAE7CH,EAAKS,YAAcR,EAAUS,KAAK,MAC9BV,EAAKE,eACPF,EAAKE,aAAeA,EAAaS,MAAM,EAAG,G,OAIhD,IAAMC,EAOZ,SAAsBhB,GAEpB,OAAOA,EACJe,MAAM,EAAG,GACTE,KACC,SAAApB,G,IACEqB,EAAcrB,EAAdqB,eACAZ,EAAYT,EAAZS,aACAD,EAASR,EAATQ,UACAc,EAAWtB,EAAXsB,YACAC,EAAYvB,EAAZuB,aACAZ,EAAEX,EAAFW,GAESY,EACT,IAAIC,EAAa,GAEfA,EADEF,EACU,GAAkB5B,OAAfpB,GAA0BoB,OAAXlB,GAAuBkB,OAAZ4B,GAE7B,mCAId,IADA,IACSG,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,IAAIC,EAAY,YACR,EAAJD,EAAQF,EACVG,EAAY,UACC,EAAJD,EAAQ,EAAIF,IACrBG,EAAY,kBAED,wBAAkChC,OAAVgC,EAAU,a,CAEjD,MAAO,6EACqChC,OADwCiB,EAAG,sEACxBjB,OAAnB8B,EAAU,WAA+C9B,OAAtC2B,EAAe,0BAGnC3B,OAH0DiB,EAAG,2JAMzFjB,OAH4B2B,EAAe,4IAG5B3B,OAAfc,EAAU,OAAkBd,OAAbe,EAAa,o9B,IAwB9CQ,KAAK,G,CArEeU,CAAaxB,GAC5BzB,IACFA,EAAYkD,UAAYT,E,KApCvB5B,EAAAC,QAAMC,IAFX,6FAEoBM,MAAK,SAAAT,GACzB,OAAOA,EAAKA,I,IA0G8BS,MAAK,SAAAC,GACjD,OAAOE,EADoDF,EAAPG,Q","sources":["src/js/weekly-trends.js"],"sourcesContent":["// weekly-trends\nimport axios from 'axios';\nimport {addRating} from './rating'\nimport { add } from 'lodash';\n\nconst URL =\n  'https://api.themoviedb.org/3/trending/movie/week?api_key=ee5376443abaeb243d053aa1ffc4ea05';\nconst IMG_BASE_URL = `https://image.tmdb.org/t/p`;\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst IMG_W400 = `/w400`;\nconst API_KEY = 'ee5376443abaeb243d053aa1ffc4ea05';\nconst galleryList = document.querySelector('.gallery-weekly-list');\nlet rating = '';\n\nfunction getTrendData() {\n  const URL =\n    'https://api.themoviedb.org/3/trending/movie/week?api_key=ee5376443abaeb243d053aa1ffc4ea05';\n\n  return axios.get(URL).then(data => {\n    return data.data;\n  });\n}\nasync function getMovieGenres() {\n  const { data } = await axios.get(\n    `${BASE_URL}/genre/movie/list?api_key=${API_KEY}`\n  );\n  return data;\n}\nexport async function getGenres() {\n  const genres = await getMovieGenres().then(({ genres }) => genres);\n\n  return { genres };\n}\n\nfunction renderMarkup(results) {\n  getGenres().then(({ genres }) => {\n    if (results) {\n      results.forEach(film => {\n        const { genre_ids, release_date } = film;\n        genres.forEach(({ name, id }) => {\n          if (genre_ids.includes(id)) {\n            if (genre_ids.length > 2) {\n              genre_ids.splice(2, genre_ids.length - 1);\n            }\n            genre_ids.splice(genre_ids.indexOf(id), 1, name);\n          }\n          film.genre_names = genre_ids.join(', ');\n          if (film.release_date) {\n            film.release_date = release_date.slice(0, 4);\n          }\n        });\n      });\n      const markupList = createMarkup(results);\n      if (galleryList) {\n        galleryList.innerHTML = markupList;\n      }\n    }\n  });\n}\nfunction createMarkup(results) {\n  // console.log(results);\n  return results\n    .slice(0, 3)\n    .map(\n      ({\n        original_title,\n        release_date,\n        genre_ids,\n        poster_path,\n        vote_average,\n        id,\n      }) => {\n        rating = vote_average\n        let posterIMG = ``;\n        if (poster_path) {\n          posterIMG = `${IMG_BASE_URL}${IMG_W400}${poster_path}`;\n        } else {\n          posterIMG = 'https://i.ibb.co/C0LFwTh/OIF.jpg';\n        }\n        \n        let starIcons = '';\n        for (let i = 1; i <= 5; i++) {\n          let starClass = 'fa-star-o';\n          if (i * 2 < vote_average) {\n            starClass = 'fa-star';\n          } else if (i * 2 - 1 < vote_average) {\n            starClass = 'fa-star-half-o';\n          }\n          starIcons += `<span class=\"fa star ${starClass}\"> </span>`;\n        }\n        return ` <li class='gallery-weekly__list-elem hover-cursor' data-catalog-item id='${id}'>           \n          <img class='gallery-weekly__image' src=\"${posterIMG}\" alt=\"${original_title}\" loading=\"lazy\" id='${id}'>\n         <div class='gallery-weekly__all-info'> \n          <div class=\"gallery-weekly__info\">\n              <h3 class= 'gallery-weekly__title'>${original_title}</h3>\n              <div class='cards-list_second_line'>\n                <div class='cards-list__text color-h'>\n                  <p>${genre_ids} | ${release_date}</p>\n                </div>\n              </div>\n          </div>\n          \n        </div>\n        <div class=\"form_item form_item_weekly\">\n            <div class=\"form_lebel\"> </div>\n            <div data-ajax=\"true\" class=\"rating rating_weekly  rating_set rating-hero\">\n                <div class=\"rating_body\">\n                    <div class=\"rating_active\"></div>\n                    <div class=\"rating_items\">\n                        <input type=\"radio\" class=\"rating_item\" value=\"1\" name=\"rating\">\n                        <input type=\"radio\" class=\"rating_item\" value=\"2\" name=\"rating\">\n                        <input type=\"radio\" class=\"rating_item\" value=\"3\" name=\"rating\">\n                        <input type=\"radio\" class=\"rating_item\" value=\"4\" name=\"rating\">\n                        <input type=\"radio\" class=\"rating_item\" value=\"5\" name=\"rating\">\n                    </div>\n                </div>\n            </div>\n        </div>\n      </li>`;\n      }, \n    )\n    .join('');\n  \n  \n}\nexport const getWeeklyTrends = getTrendData().then(({ results }) => {\n  return renderMarkup(results);\n});\n"],"names":["$bpxeT","parcelRequire","$fe3a3a1ac89f0559$var$IMG_BASE_URL","$fe3a3a1ac89f0559$var$BASE_URL","$fe3a3a1ac89f0559$var$IMG_W400","$fe3a3a1ac89f0559$var$API_KEY","$fe3a3a1ac89f0559$var$galleryList","document","querySelector","$fe3a3a1ac89f0559$var$getMovieGenres","$fe3a3a1ac89f0559$var$_getMovieGenres","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","data","$dIxxU","default","get","concat","_ctx","sent","$fe3a3a1ac89f0559$var$_getGenres","genres1","then","param","genres","$fe3a3a1ac89f0559$var$renderMarkup","results","$fe3a3a1ac89f0559$export$c5604fa8028da00","param1","forEach","film","genre_ids","release_date","name","id","includes","length","splice","indexOf","genre_names","join","slice","markupList","map","original_title","poster_path","vote_average","posterIMG","i","starClass","$fe3a3a1ac89f0559$var$createMarkup","innerHTML"],"version":3,"file":"index.5d73c419.js.map"}